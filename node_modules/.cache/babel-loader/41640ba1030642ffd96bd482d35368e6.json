{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit';\nimport { connect } from 'react-redux';\nimport { fetchHabitslist } from '../../actions';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      checked: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n    console.log(this.state.checked);\n  }\n\n  render() {\n    let text = this.state.checked ? /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 41\n      }\n    }, this.props.message) : this.props.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), \"\\xA0\", text, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nclass HabitsList extends React.Component {\n  // state = {\n  //     habitslist: [],\n  // };\n  componentDidMount() {\n    this.props.fetchHabitslist(); // fetch('/habitslist').then(resp => {\n    //     return resp.json();\n    // }).then(body => {\n    //     this.setState({\n    //         habitslist: body\n    //     })\n    // })\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        id: this.state.habitslist.id,\n        message: this.state.habitslist[i].title,\n        checked: this.state.habitslist[i].checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 31\n        }\n      }));\n    }\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHabitslist: () => dispatch(fetchHabitslist())\n});\n\nexport default connect(mapStateProps, mapDispatchToProps)(HabitsList);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","connect","fetchHabitslist","Item","Component","constructor","props","state","checked","handleClick","bind","e","setState","console","log","render","text","message","HabitsList","componentDidMount","updateItem","id","itemAttributes","index","habitslist","length","list","find","newlist","slice","Object","assign","updatedList","fetch","method","headers","body","JSON","stringify","then","json","savedList","addNewHabit","str","title","allTheThings","i","push","items","map","thing","mapStateProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAiC,mBAAjC;AAEA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAKA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDD,EAAAA,WAAW,CAAEE,CAAF,EAAI;AACX,SAAKC,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,KAAd;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,OAAvB;AAEH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,QAAIC,IAAI,GAAG,KAAKT,KAAL,CAAWC,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKF,KAAL,CAAWW,OAApB,CAArB,GAA6D,KAAKX,KAAL,CAAWW,OAAnF;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE,KAAKR,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,UAC+DO,IAD/D,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AA7B8B;;AAiCnC,MAAME,UAAN,SAAyBrB,KAAK,CAACO,SAA/B,CAAyC;AAErC;AACA;AACA;AAEAe,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,KAAL,CAAWJ,eAAX,GADgB,CAEhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACH;;AAGDkB,EAAAA,UAAU,CAACC,EAAD,EAAKC,cAAL,EAAqB;AAC3B,QAAIC,KAAK,GAAG,KAAKhB,KAAL,CAAWiB,UAAX,CAAsBC,MAAlC;AAEA,UAAMC,IAAI,GAAG,KAAKnB,KAAL,CAAWiB,UAAX,CAAsBG,IAAtB,CAA2BD,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAA/C,CAAb;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBY,IAArB;AAEA,UAAME,OAAO,GAAG,CACZ,GAAG,KAAKrB,KAAL,CAAWiB,UAAX,CAAsBK,KAAtB,CAA4B,CAA5B,EAA+BN,KAA/B,CADS,EAEZO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWiB,UAAX,CAAsBD,KAAK,GAAC,CAA5B,CAAlB,EAAkDD,cAAlD,CAFY,EAGZ,GAAG,KAAKf,KAAL,CAAWiB,UAAX,CAAsBK,KAAtB,CAA4BN,KAA5B,CAHS,CAAhB;AAMA,UAAMS,WAAW,GAAG,EAAE,GAAG,KAAKzB,KAAL,CAAWiB,UAAhB;AAA4B,SAAGF;AAA/B,KAApB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBc,OAAO,CAAC,KAAKrB,KAAL,CAAWiB,UAAX,CAAsBC,MAAvB,CAA/B;AAGAQ,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAO,CAAC,KAAKrB,KAAL,CAAWiB,UAAX,CAAsBC,MAAvB,CAAtB;AALW,KAAhB,CAAL,CAOKc,IAPL,CAOU5B,CAAC,IAAIA,CAAC,CAAC6B,IAAF,EAPf,EAQKD,IARL,CAQUE,SAAS,IAAI;AACf,WAAK7B,QAAL,CAAeL,KAAD,KAAY;AACtBiB,QAAAA,UAAU,EAAEI;AADU,OAAZ,CAAd;AAGAf,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBc,OAApB;AACH,KAbL;AAgBA,SAAKhB,QAAL,CAAc;AACVY,MAAAA,UAAU,EAAE,CACR,GAAG,KAAKjB,KAAL,CAAWiB,UAAX,CAAsBK,KAAtB,CAA4B,CAA5B,EAA+BN,KAA/B,CADK,EAERO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWiB,UAAX,CAAsBD,KAAK,GAAC,CAA5B,CAAlB,EAAkDD,cAAlD,CAFQ,EAGR,GAAG,KAAKf,KAAL,CAAWiB,UAAX,CAAsBK,KAAtB,CAA4BN,KAA5B,CAHK;AADF,KAAd;AAOH;;AAEDmB,EAAAA,WAAW,CAACC,GAAD,EAAK;AACZ9B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWiB,UAAX,CAAsBC,MAAlC;AACA,SAAKL,UAAL,CAAgB,KAAKb,KAAL,CAAWiB,UAAX,CAAsBC,MAAtC,EAA8C;AAACJ,MAAAA,EAAE,EAAC,KAAKd,KAAL,CAAWiB,UAAX,CAAsBC,MAAtB,GAA+B,CAAnC;AAAsCjB,MAAAA,OAAO,EAAC,KAA9C;AAAsDoC,MAAAA,KAAK,EAAED;AAA7D,KAA9C;AAEH;;AAGD5B,EAAAA,MAAM,GAAG;AACL,QAAI8B,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvC,KAAL,CAAWiB,UAAX,CAAsBC,MAA1C,EAAkDqB,CAAC,EAAnD,EAAuD;AACnDD,MAAAA,YAAY,CAACE,IAAb,eAAkB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,KAAKxC,KAAL,CAAWiB,UAAX,CAAsBH,EAAhC;AAAoC,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWiB,UAAX,CAAsBsB,CAAtB,EAAyBF,KAAtE;AAA6E,QAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWiB,UAAX,CAAsBsB,CAAtB,EAAyBtC,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AACH;;AACD,QAAIwC,KAAK,GAAGH,YAAY,CAACI,GAAb,CAAiBC,KAAK,IAAIA,KAA1B,CAAZ;AAEA,wBAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CAFJ,eAGI,oBAAC,QAAD;AAAW,MAAA,KAAK,EAAGrC,CAAD,IAAO,KAAK+B,WAAL,CAAiB/B,CAAjB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ;AAQH;;AAlFoC;;AAqFzC,MAAMwC,aAAa,GAAG,OAAO,EAAP,CAAtB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCnD,EAAAA,eAAe,EAAE,MAAMmD,QAAQ,CAACnD,eAAe,EAAhB;AADO,CAAf,CAA3B;;AAGA,eAAeD,OAAO,CAACkD,aAAD,EAAgBC,kBAAhB,CAAP,CAA2ClC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\nimport { connect } from 'react-redux';\nimport { fetchHabitslist } from '../../actions';\n\n\n\n\nclass Item extends React.Component {\n    constructor (props){\n        super ();\n\n        this.state = {\n            checked: false\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick (e){\n        this.setState({\n            checked: !this.state.checked\n        });\n        console.log(this.state.checked)\n\n    }\n\n    render (){\n\n        let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass HabitsList extends React.Component {\n\n    // state = {\n    //     habitslist: [],\n    // };\n\n    componentDidMount() {\n        this.props.fetchHabitslist();\n        // fetch('/habitslist').then(resp => {\n        //     return resp.json();\n        // }).then(body => {\n\n        //     this.setState({\n        //         habitslist: body\n        //     })\n        // })\n    }\n\n\n    updateItem(id, itemAttributes) {\n        var index = this.state.habitslist.length;\n\n        const list = this.state.habitslist.find(list => list.id === id);\n        console.log(\"prev \", list)\n\n        const newlist = [\n            ...this.state.habitslist.slice(0, index),\n            Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n            ...this.state.habitslist.slice(index)\n        ]\n\n        const updatedList = { ...this.state.habitslist, ...itemAttributes};\n        console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n        fetch('/habitslist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newlist[this.state.habitslist.length]),\n        })\n            .then(e => e.json())\n            .then(savedList => {\n                this.setState((state) => ({\n                    habitslist: newlist\n                }));\n                console.log(\"lefe\", newlist)\n            })\n\n\n        this.setState({\n            habitslist: [\n                ...this.state.habitslist.slice(0, index),\n                Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n                ...this.state.habitslist.slice(index)\n            ]\n        });\n    }\n\n    addNewHabit(str){\n        console.log(this.state.habitslist.length)\n        this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n    }\n\n\n    render (){\n        let allTheThings = [];\n        for (var i = 0; i < this.state.habitslist.length; i++) {\n            allTheThings.push(<Item id={this.state.habitslist.id} message={this.state.habitslist[i].title} checked={this.state.habitslist[i].checked} />);\n        }\n        let items = allTheThings.map(thing => thing);\n\n        return (\n\n            <div className='habits-list'>\n                <h2>Habits List</h2>\n                <h4>{items}</h4>\n                <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n            </div>\n        );\n    }\n}\n\nconst mapStateProps = () => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchHabitslist: () => dispatch(fetchHabitslist()),\n  });\nexport default connect(mapStateProps, mapDispatchToProps)(HabitsList)\n\n"]},"metadata":{},"sourceType":"module"}