{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/check-box/check-box.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox'; // export default function Checkboxes() {\n//   const [checked, setChecked] = React.useState(true);\n//   const handleChange = (event) => {\n//     setChecked(event.target.checked);\n//   };\n//   return (\n//     <div>\n//         <h1>Water</h1>\n//       <Checkbox\n//         checked={checked}\n//         onChange={handleChange}\n//         inputProps={{ 'aria-label': 'primary checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         color=\"primary\"\n//         inputProps={{ 'aria-label': 'secondary checkbox' }}\n//       />\n//       <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'checkbox with small size' }}\n//       />\n//     </div>\n//   );\n// }\n\nexport const CheckBox = props => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    key: props.id,\n    onClick: props.handleCheckChieldElement,\n    type: \"checkbox\",\n    checked: props.isChecked,\n    value: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }), \" \", props.value);\n}; // export default CheckBox\n\nclass Checkboxes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAllChecked = event => {\n      let fruites = this.state.fruites;\n      fruites.forEach(fruite => fruite.isChecked = event.target.checked);\n      this.setState({\n        fruites: fruites\n      });\n    };\n\n    this.handleCheckChieldElement = event => {\n      let fruites = this.state.fruites;\n      fruites.forEach(fruite => {\n        if (fruite.value === event.target.value) fruite.isChecked = event.target.checked;\n      });\n      this.setState({\n        fruites: fruites\n      });\n    };\n\n    this.state = {\n      fruites: [{\n        id: 1,\n        value: \"banana\",\n        isChecked: false\n      }, {\n        id: 2,\n        value: \"apple\",\n        isChecked: false\n      }, {\n        id: 3,\n        value: \"mango\",\n        isChecked: false\n      }, {\n        id: 4,\n        value: \"grap\",\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \" Check and Uncheck All Example \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleAllChecked,\n      value: \"checkedall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), \" Check / Uncheck All\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, this.state.fruites.map(fruite => {\n      return /*#__PURE__*/React.createElement(CheckBox, Object.assign({\n        handleCheckChieldElement: this.handleCheckChieldElement\n      }, fruite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default Checkboxes;","map":{"version":3,"sources":["/Applications/web/health-app/src/components/check-box/check-box.js"],"names":["React","Checkbox","CheckBox","props","id","handleCheckChieldElement","isChecked","value","Checkboxes","Component","constructor","handleAllChecked","event","fruites","state","forEach","fruite","target","checked","setState","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// export default function Checkboxes() {\n//   const [checked, setChecked] = React.useState(true);\n\n//   const handleChange = (event) => {\n//     setChecked(event.target.checked);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Water</h1>\n//       <Checkbox\n//         checked={checked}\n//         onChange={handleChange}\n//         inputProps={{ 'aria-label': 'primary checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         color=\"primary\"\n//         inputProps={{ 'aria-label': 'secondary checkbox' }}\n//       />\n//       <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n//       <Checkbox\n//         defaultChecked\n  \n//         inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n//       />\n     \n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'checkbox with small size' }}\n//       />\n//     </div>\n//   );\n// }\n\nexport const CheckBox = props => {\n    return (\n      <li>\n       <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n      </li>\n    )\n}\n\n// export default CheckBox\n\n\nclass Checkboxes extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        fruites: [\n          {id: 1, value: \"banana\", isChecked: false},\n          {id: 2, value: \"apple\", isChecked: false},\n          {id: 3, value: \"mango\", isChecked: false},\n          {id: 4, value: \"grap\", isChecked: false}\n        ]\n      }\n    }\n    \n    handleAllChecked = (event) => {\n      let fruites = this.state.fruites\n      fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n      this.setState({fruites: fruites})\n    }\n  \n    handleCheckChieldElement = (event) => {\n      let fruites = this.state.fruites\n      fruites.forEach(fruite => {\n         if (fruite.value === event.target.value)\n            fruite.isChecked =  event.target.checked\n      })\n      this.setState({fruites: fruites})\n    }\n  \n    render() {\n      return (\n        <div className=\"App\">\n        <h1> Check and Uncheck All Example </h1>\n        <input type=\"checkbox\" onClick={this.handleAllChecked}  value=\"checkedall\" /> Check / Uncheck All\n          <ul>\n          {\n            this.state.fruites.map((fruite) => {\n              return (<CheckBox handleCheckChieldElement={this.handleCheckChieldElement}  {...fruite} />)\n            })\n          }\n          </ul>\n        </div>\n      );\n    }\n  }\n  \n  export default Checkboxes\n"]},"metadata":{},"sourceType":"module"}