{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(); // this.state = {\n    //     id: 0,\n    //     title: \n    //     checked: false\n    // };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n    console.log(this.state.checked);\n  }\n\n  render() {\n    let text = this.state.checked ? /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 41\n      }\n    }, this.props.message) : this.props.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }), \"\\xA0\", text, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default class HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        id: this.state.habitslist.id,\n        message: this.state.habitslist[i].title,\n        checked: this.state.habitslist[i].checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 31\n        }\n      }));\n    }\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","Component","constructor","props","handleClick","bind","e","setState","checked","state","console","log","render","text","message","HabitsList","habitslist","componentDidMount","fetch","then","resp","json","body","updateItem","id","itemAttributes","index","length","list","find","newlist","slice","Object","assign","updatedList","method","headers","JSON","stringify","savedList","addNewHabit","str","title","allTheThings","i","push","items","map","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\n\nclass Item extends React.Component {\n    constructor (props){\n        super ();\n\n        // this.state = {\n        //     id: 0,\n        //     title: \n        //     checked: false\n        // };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick (e){\n        this.setState({\n            checked: !this.state.checked\n        });\n        console.log(this.state.checked)\n\n    }\n\n    render (){\n\n        let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n                    <hr />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default class HabitsList extends React.Component {\n\n    state = {\n        habitslist: [],\n    };\n\n    componentDidMount() {\n        fetch('/habitslist').then(resp => {\n            return resp.json();\n        }).then(body => {\n\n            this.setState({\n                habitslist: body\n            })\n        })\n    }\n\n\n    updateItem(id, itemAttributes) {\n        var index = this.state.habitslist.length;\n\n        const list = this.state.habitslist.find(list => list.id === id);\n        console.log(\"prev \", list)\n\n        const newlist = [\n            ...this.state.habitslist.slice(0, index),\n            Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n            ...this.state.habitslist.slice(index)\n        ]\n\n        const updatedList = { ...this.state.habitslist, ...itemAttributes};\n        console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n        fetch('/habitslist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newlist[this.state.habitslist.length]),\n        })\n            .then(e => e.json())\n            .then(savedList => {\n                this.setState((state) => ({\n                    habitslist: newlist\n                }));\n                console.log(\"lefe\", newlist)\n            })\n\n\n        this.setState({\n            habitslist: [\n                ...this.state.habitslist.slice(0, index),\n                Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n                ...this.state.habitslist.slice(index)\n            ]\n        });\n    }\n\n    addNewHabit(str){\n        console.log(this.state.habitslist.length)\n        this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n    }\n\n\n    render (){\n        let allTheThings = [];\n        for (var i = 0; i < this.state.habitslist.length; i++) {\n            allTheThings.push(<Item id={this.state.habitslist.id} message={this.state.habitslist[i].title} checked={this.state.habitslist[i].checked} />);\n        }\n        let items = allTheThings.map(thing => thing);\n\n        return (\n\n            <div className='habits-list'>\n                <h2>Habits List</h2>\n                <h4>{items}</h4>\n                <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}