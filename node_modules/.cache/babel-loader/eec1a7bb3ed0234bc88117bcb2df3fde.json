{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      checked: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n  render() {\n    let text = this.state.checked ? /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, this.props.message) : this.props.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), \"\\xA0\", text, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default class HabitsList extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      habitslist: [{\n        id: 1,\n        title: \"Drink more water\"\n      }, {\n        id: 2,\n        title: \"No coffee\"\n      }, {\n        id: 3,\n        title: \"Morning workout\"\n      }, {\n        id: 4,\n        title: \"More time outside\"\n      }]\n    };\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.items.findIndex(x => x.id === id);\n    this.setState({\n      items: [...this.state.items.slice(0, index), Object.assign({}, this.state.items[index], itemAttributes), ...this.state.items.slice(index + 1)]\n    });\n  }\n\n  addNewHabit(str) {\n    this.updateItem(this.state.habitslist.length, {\n      title: str\n    }); // this.setState(state =>{\n    //   const habitslist = state.habitslist.push(str)\n    // });\n  } // onAddItem = () => {\n  //   // not allowed AND not working\n  //   this.setState(state => {\n  //     const list = state.list.push(state.value);\n  //     return {\n  //       list,\n  //       value: '',\n  //     };\n  //   });\n  // };\n\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        message: this.state.habitslist[i].title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 27\n        }\n      }));\n    } // let allTheThings = [<Item message={this.props.mes1} />, <Item message={this.props.mes2} />, \n    //   <Item message={this.state.mes1} />, <Item message={this.props.mes4} />]\n\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, items), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-secondary\",\n      label: \"Enter new habit\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"button1\",\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Add habit\"), /*#__PURE__*/React.createElement(AddHabit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Applications/web/health-app/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","Component","constructor","props","state","checked","handleClick","bind","e","setState","render","text","message","HabitsList","habitslist","id","title","updateItem","itemAttributes","index","items","findIndex","x","slice","Object","assign","addNewHabit","str","length","allTheThings","i","push","map","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\nclass Item extends React.Component {\n  constructor (props){\n    super ();\n\n    this.state = {\n      checked: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);    \n  }\n  handleClick (e){\n    this.setState({\n      checked: !this.state.checked\n    });\n\n  }\n  render (){\n    \n    let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n    return (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n            <hr />\n          </div>\n        </div>\n    );\n  }\n}\n\n\nexport default class HabitsList extends React.Component {\n\n  constructor (props){\n    super ();\n    this.state = {\n      habitslist: [\n          {\n            id: 1,\n            title: \"Drink more water\"\n          },\n          {\n            id: 2,\n            title: \"No coffee\"\n          },\n          {\n            id: 3,\n            title: \"Morning workout\"\n          },\n          {\n            id: 4,\n            title: \"More time outside\"\n          },\n      ]\n      \n    };\n\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.items.findIndex(x=> x.id === id);\n\n      this.setState({\n        items: [\n           ...this.state.items.slice(0,index),\n           Object.assign({}, this.state.items[index], itemAttributes),\n           ...this.state.items.slice(index+1)\n        ]\n      });\n  }\n\n  addNewHabit(str){\n    this.updateItem(this.state.habitslist.length, {title: str});\n    // this.setState(state =>{\n    //   const habitslist = state.habitslist.push(str)\n    // });\n\n  }\n\n  // onAddItem = () => {\n  //   // not allowed AND not working\n  //   this.setState(state => {\n  //     const list = state.list.push(state.value);\n \n  //     return {\n  //       list,\n  //       value: '',\n  //     };\n  //   });\n  // };\n\n\n  render (){\n    let allTheThings = [];\n    for (var i = 0; i < this.state.habitslist.length; i++) { \n        allTheThings.push(<Item message={this.state.habitslist[i].title} />);\n      }\n    // let allTheThings = [<Item message={this.props.mes1} />, <Item message={this.props.mes2} />, \n    //   <Item message={this.state.mes1} />, <Item message={this.props.mes4} />]\n    let items = allTheThings.map(thing => thing);\n\n    return (\n\n      <div className='habits-list'>\n        \n        <h2>Habits List</h2>\n        \n        <h4>{items}</h4>\n        <TextField id=\"standard-secondary\" label=\"Enter new habit\" color=\"secondary\" />\n        <Button className='button1' variant=\"contained\" color=\"primary\">\n          Add habit\n        </Button>\n        <AddHabit></AddHabit>\n\n\n        \n\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}