{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js\";\nimport React from 'react';\nimport './habits.css';\nimport AddHabit from '../addHabit';\nimport { connect } from 'react-redux';\nimport { fetchHabitslist } from '../../actions';\nimport Item from '../habit';\n\nclass HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let items = this.state.habitslist.map((habit, i) => /*#__PURE__*/React.createElement(Item, {\n      key: i,\n      message: habit.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 62\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHabitslist: () => dispatch(fetchHabitslist())\n});\n\nexport default connect(mapStateProps, mapDispatchToProps)(HabitsList);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js"],"names":["React","AddHabit","connect","fetchHabitslist","Item","HabitsList","Component","state","habitslist","componentDidMount","fetch","then","resp","json","body","setState","updateItem","id","itemAttributes","index","length","list","find","console","log","newlist","slice","Object","assign","updatedList","method","headers","JSON","stringify","e","savedList","addNewHabit","str","checked","title","render","items","map","habit","i","mapStateProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\nimport { connect } from 'react-redux';\nimport { fetchHabitslist } from '../../actions';\n\nimport Item from '../habit'\n\n\nclass HabitsList extends React.Component {\n\n    state = {\n        habitslist: [],\n    };\n\n    componentDidMount() {\n        fetch('/habitslist').then(resp => {\n            return resp.json();\n        }).then(body => {\n\n            this.setState({\n                habitslist: body\n            })\n        })\n    }\n\n    updateItem(id, itemAttributes) {\n        var index = this.state.habitslist.length;\n\n        const list = this.state.habitslist.find(list => list.id === id);\n        console.log(\"prev \", list)\n\n        const newlist = [\n            ...this.state.habitslist.slice(0, index),\n            Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n            ...this.state.habitslist.slice(index)\n        ]\n\n        const updatedList = { ...this.state.habitslist, ...itemAttributes};\n        console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n        fetch('/habitslist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newlist[this.state.habitslist.length]),\n        })\n            .then(e => e.json())\n            .then(savedList => {\n                this.setState((state) => ({\n                    habitslist: newlist\n                }));\n                console.log(\"lefe\", newlist)\n            })\n\n\n        this.setState({\n            habitslist: [\n                ...this.state.habitslist.slice(0, index),\n                Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n                ...this.state.habitslist.slice(index)\n            ]\n        });\n    }\n\n    addNewHabit(str){\n        console.log(this.state.habitslist.length)\n        this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n    }\n\n\n    render (){\n        let items = this.state.habitslist.map((habit, i) => (<Item key={i} message={habit.title} />))\n        return(\n            <div className='habits-list'>\n                <h2>Habits List</h2>\n                <h4>{items}</h4>\n                <AddHabit onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n            </div>\n        );\n    }\n}\n\nconst mapStateProps = () => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchHabitslist: () => dispatch(fetchHabitslist()),\n});\n\nexport default connect(mapStateProps, mapDispatchToProps)(HabitsList)\n\n"]},"metadata":{},"sourceType":"module"}