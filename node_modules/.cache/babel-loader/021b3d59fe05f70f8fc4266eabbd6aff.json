{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/check-box/check-box.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './check-box.css';\nexport default function Checkboxes() {\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Water\"), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: true,\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    inputProps: {\n      'aria-label': 'uncontrolled-checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: true,\n    inputProps: {\n      'aria-label': 'indeterminate checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: true,\n    inputProps: {\n      'aria-label': 'checkbox with small size'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n} // export const CheckBox = props => {\n//     return (\n//       <li>\n//        <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n//       </li>\n//     )\n// }\n// export default CheckBox\n// class Checkboxes extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         fruites: [\n//           {id: 1, value: \"banana\", isChecked: false},\n//           {id: 2, value: \"apple\", isChecked: false},\n//           {id: 3, value: \"mango\", isChecked: false},\n//           {id: 4, value: \"grap\", isChecked: false}\n//         ]\n//       }\n//     }\n//     handleAllChecked = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n//       this.setState({fruites: fruites})\n//     }\n//     handleCheckChieldElement = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => {\n//          if (fruite.value === event.target.value)\n//             fruite.isChecked =  event.target.checked\n//       })\n//       this.setState({fruites: fruites})\n//     }\n//     render() {\n//       return (\n//         <div className=\"App\">\n//         <h1> Check and Uncheck All Example </h1>\n//         <input type=\"checkbox\" onClick={this.handleAllChecked}  value=\"checkedall\" /> Check / Uncheck All\n//           <ul>\n//           {\n//             this.state.fruites.map((fruite) => {\n//               return (<CheckBox handleCheckChieldElement={this.handleCheckChieldElement}  {...fruite} />)\n//             })\n//           }\n//           </ul>\n//         </div>\n//       );\n//     }\n//   }\n//   // export default Checkboxes\n// // class HabitProgress extends React.Component {\n// //   constructor(props) {\n// //     super(props)\n// //     this.state = {\n// //       percentage: 0\n//     }\n//     this.nextStep = this.nextStep.bind(this)\n//   }\n//   nextStep() {\n//     if(this.percentage === 100) return \n//     else{\n//       this.percentage =this.percentage + 12.5   \n//       console.log(this.percentage)\n//     }\n//     console.log(\"ADD 12\");\n//   }\n//   render() {\n//     return (\n//       <div className = 'progress'>\n//         <h2>{this.props.title}</h2>\n//         <ProgressBar percentage={this.props.percentage} />\n//         <div style={{ marginTop: '20px' }}>  \n//           <button\n//             onClick={this.props.nextStep}\n//            >\n//             {this.props.increment}\n//           </button>  \n//           <button style={{width: '70px', height:'30px', marginTop: '10px',backgroundColor: 'rgba(231, 27, 27, 0.795)', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}> {this.props.reset}</button>\n//         </div>   \n//       </div>\n//     )\n//   }  \n// }\n// class ProgressBar extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return (\n//       <div className=\"progress-bar\">\n//         <Filler percentage={this.props.percentage} />\n//       </div>\n//     )\n//   }\n// }\n// // const ProgressBar = (props) => {\n// //   console.log(\"HUINYA\");\n// //   console.log(props.percentage);\n// //   return (\n// //       <div className=\"progress-bar\">\n// //         <Filler percentage={props.percentage} />\n// //       </div>\n// //     )\n// // }\n// // const Filler = (props) => {\n// //   return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n// // }\n// class Filler extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return <div className=\"filler\" style={{ width: `${this.props.percentage}%` }} />\n//   }\n// }\n// export default class HabitProgressList extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       habits: [\n//         {\n//           title: \"Water tracker\",\n//           percentage: 0,\n//           increment: \"+1 glass\",\n//           reset: \"Reset\"\n//         },\n//         {\n//           title: \"Else \",\n//           percentage: 25,\n//           increment: \"+\",\n//           reset: \"Reset\"\n//         },\n//       ]\n//     }\n//       }\n//       render(){\n//         return(\n//           <div>\n//             {this.state.habits.map((habit) => (\n//               console.log(habit.title),\n//           <HabitProgress title={habit.title} percentage={habit.percentage} increment={habit.increment} reset={habit.reset}  toggleIsDone={(id) => this.toggleIsDone(id)} />\n//         ))}\n//           </div>\n//         )\n//       }\n// }","map":{"version":3,"sources":["/Applications/web/health-app/src/components/check-box/check-box.js"],"names":["React","Checkbox","Checkboxes","checked","setChecked","useState","handleChange","event","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,iBAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,UAAU,CAACG,KAAK,CAACC,MAAN,CAAaL,OAAd,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,QAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAYE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,QAAD;AACE,IAAA,cAAc,MADhB;AAGE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAmBE,oBAAC,QAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA0BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './check-box.css'\n\nexport default function Checkboxes() {\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div>\n        <h1>Water</h1>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Checkbox\n        defaultChecked\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n      <Checkbox\n        defaultChecked\n  \n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n      />\n     \n      <Checkbox\n        defaultChecked\n        inputProps={{ 'aria-label': 'checkbox with small size' }}\n      />\n    </div>\n  );\n}\n\n// export const CheckBox = props => {\n//     return (\n//       <li>\n//        <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n//       </li>\n//     )\n// }\n\n// export default CheckBox\n\n\n// class Checkboxes extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         fruites: [\n//           {id: 1, value: \"banana\", isChecked: false},\n//           {id: 2, value: \"apple\", isChecked: false},\n//           {id: 3, value: \"mango\", isChecked: false},\n//           {id: 4, value: \"grap\", isChecked: false}\n//         ]\n//       }\n//     }\n    \n//     handleAllChecked = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n//       this.setState({fruites: fruites})\n//     }\n  \n//     handleCheckChieldElement = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => {\n//          if (fruite.value === event.target.value)\n//             fruite.isChecked =  event.target.checked\n//       })\n//       this.setState({fruites: fruites})\n//     }\n  \n//     render() {\n//       return (\n//         <div className=\"App\">\n//         <h1> Check and Uncheck All Example </h1>\n//         <input type=\"checkbox\" onClick={this.handleAllChecked}  value=\"checkedall\" /> Check / Uncheck All\n//           <ul>\n//           {\n//             this.state.fruites.map((fruite) => {\n//               return (<CheckBox handleCheckChieldElement={this.handleCheckChieldElement}  {...fruite} />)\n//             })\n//           }\n//           </ul>\n//         </div>\n//       );\n//     }\n//   }\n  \n//   // export default Checkboxes\n\n\n// // class HabitProgress extends React.Component {\n// //   constructor(props) {\n// //     super(props)\n    \n// //     this.state = {\n// //       percentage: 0\n//     }\n//     this.nextStep = this.nextStep.bind(this)\n//   }\n//   nextStep() {\n//     if(this.percentage === 100) return \n//     else{\n//       this.percentage =this.percentage + 12.5   \n//       console.log(this.percentage)\n\n//     }\n//     console.log(\"ADD 12\");\n\n//   }\n  \n//   render() {\n//     return (\n//       <div className = 'progress'>\n        \n//         <h2>{this.props.title}</h2>\n        \n//         <ProgressBar percentage={this.props.percentage} />\n        \n//         <div style={{ marginTop: '20px' }}>  \n        \n//           <button\n//             onClick={this.props.nextStep}\n//            >\n//             {this.props.increment}\n//           </button>  \n\n//           <button style={{width: '70px', height:'30px', marginTop: '10px',backgroundColor: 'rgba(231, 27, 27, 0.795)', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}> {this.props.reset}</button>\n          \n//         </div>   \n        \n//       </div>\n//     )\n//   }  \n// }\n\n\n// class ProgressBar extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return (\n    \n//       <div className=\"progress-bar\">\n//         <Filler percentage={this.props.percentage} />\n//       </div>\n//     )\n//   }\n// }\n// // const ProgressBar = (props) => {\n// //   console.log(\"HUINYA\");\n// //   console.log(props.percentage);\n\n// //   return (\n    \n// //       <div className=\"progress-bar\">\n// //         <Filler percentage={props.percentage} />\n// //       </div>\n// //     )\n// // }\n\n// // const Filler = (props) => {\n// //   return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n// // }\n\n// class Filler extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return <div className=\"filler\" style={{ width: `${this.props.percentage}%` }} />\n\n//   }\n// }\n\n\n// export default class HabitProgressList extends React.Component {\n//   constructor(props) {\n//     super(props)\n    \n//     this.state = {\n//       habits: [\n//         {\n//           title: \"Water tracker\",\n//           percentage: 0,\n//           increment: \"+1 glass\",\n//           reset: \"Reset\"\n//         },\n//         {\n//           title: \"Else \",\n//           percentage: 25,\n//           increment: \"+\",\n//           reset: \"Reset\"\n//         },\n//       ]\n     \n//     }\n//       }\n\n//       render(){\n//         return(\n\n//           <div>\n            \n//             {this.state.habits.map((habit) => (\n//               console.log(habit.title),\n//           <HabitProgress title={habit.title} percentage={habit.percentage} increment={habit.increment} reset={habit.reset}  toggleIsDone={(id) => this.toggleIsDone(id)} />\n//         ))}\n//           </div>\n//         )\n//       }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}