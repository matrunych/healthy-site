{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit'; // class Item extends React.Component {\n//     constructor (props){\n//         super ();\n//         this.state = {\n//             checked: false\n//         };\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick (e){\n//         this.setState({\n//             checked: !this.state.checked\n//         });\n//     }\n//     render (){\n//         let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n//         return (\n//             <div className=\"row\">\n//                 <div className=\"col-md-12\">\n//                     <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n//                     <hr />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nconst Item = ({\n  habit,\n  isChecked\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"todo-list-item\",\n  onClick: () => isChecked(habit.id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, habitslist[0].checked ? /*#__PURE__*/React.createElement(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"check\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}, \"\\u2714\\uFE0F\") : /*#__PURE__*/React.createElement(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"cross\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}, \"\\u274C\"), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"todo-list-item-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }\n}, habit.title, \"!\"));\n\nexport default class HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  isChecked(id) {\n    const {\n      list\n    } = this.props;\n    let update = {\n      habitslist: list.habitslist.map(habit => habit.id === id ? { ...habit,\n        isChecked: !habit.isChecked\n      } : habit)\n    };\n    this.props.updateTodoList(list.id, { ...list,\n      ...update\n    });\n  }\n\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        message: this.state.habitslist[i].title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 31\n        }\n      }));\n    }\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","habit","isChecked","id","habitslist","checked","title","HabitsList","Component","state","list","props","update","map","updateTodoList","componentDidMount","fetch","then","resp","json","body","setState","updateItem","itemAttributes","index","length","find","console","log","newlist","slice","Object","assign","updatedList","method","headers","JSON","stringify","e","savedList","addNewHabit","str","render","allTheThings","i","push","items","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\n// class Item extends React.Component {\n//     constructor (props){\n//         super ();\n\n//         this.state = {\n//             checked: false\n//         };\n\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick (e){\n//         this.setState({\n//             checked: !this.state.checked\n//         });\n\n//     }\n\n//     render (){\n\n//         let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n//         return (\n//             <div className=\"row\">\n//                 <div className=\"col-md-12\">\n//                     <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n//                     <hr />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n\nconst Item = ({ habit, isChecked }) => (\n        <div className='todo-list-item' onClick={() => isChecked(habit.id)}>\n      {habitslist[0].checked ? (\n        <span role='img' aria-label='check'>\n          ✔️\n        </span>\n      ) : (\n        <span role='img' aria-label='cross'>\n          ❌\n        </span>\n      )}\n      <span className='todo-list-item-text'>{habit.title}!</span>\n    </div>\n    )\n\n    \n\n\nexport default class HabitsList extends React.Component {\n\n    state = {\n        habitslist: [],\n    };\n\n    isChecked(id) {\n        const { list } = this.props;\n    \n        let update = {\n            habitslist: list.habitslist.map((habit) => (habit.id === id ? { ...habit, isChecked: !habit.isChecked } : habit)),\n        };\n    \n        this.props.updateTodoList(list.id, { ...list, ...update });\n      }\n\n    componentDidMount() {\n        fetch('/habitslist').then(resp => {\n            return resp.json();\n        }).then(body => {\n\n            this.setState({\n                habitslist: body\n            })\n        })\n    }\n\n\n    updateItem(id, itemAttributes) {\n        var index = this.state.habitslist.length;\n\n        const list = this.state.habitslist.find(list => list.id === id);\n        console.log(\"prev \", list)\n\n        const newlist = [\n            ...this.state.habitslist.slice(0, index),\n            Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n            ...this.state.habitslist.slice(index)\n        ]\n\n        const updatedList = { ...this.state.habitslist, ...itemAttributes};\n        console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n        fetch('/habitslist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newlist[this.state.habitslist.length]),\n        })\n            .then(e => e.json())\n            .then(savedList => {\n                this.setState((state) => ({\n                    habitslist: newlist\n                }));\n                console.log(\"lefe\", newlist)\n            })\n\n\n        this.setState({\n            habitslist: [\n                ...this.state.habitslist.slice(0, index),\n                Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n                ...this.state.habitslist.slice(index)\n            ]\n        });\n    }\n\n    addNewHabit(str){\n        console.log(this.state.habitslist.length)\n        this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n    }\n\n\n    render (){\n        let allTheThings = [];\n        for (var i = 0; i < this.state.habitslist.length; i++) {\n            allTheThings.push(<Item message={this.state.habitslist[i].title} />);\n        }\n        let items = allTheThings.map(thing => thing);\n\n        return (\n\n            <div className='habits-list'>\n                <h2>Habits List</h2>\n                <h4>{items}</h4>\n                <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}