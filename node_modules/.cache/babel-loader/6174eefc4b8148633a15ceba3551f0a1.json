{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      checked: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        checked: !this.state.checked\n      }));\n    });\n  }\n\n  render() {\n    let text = this.state.checked ? /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, this.props.message) : this.props.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), \"\\xA0\", text, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default class HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        message: this.state.habitslist[i].title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 27\n        }\n      }));\n    }\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Applications/web/health-app/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","Component","constructor","props","state","checked","handleClick","bind","e","setState","fetch","method","headers","then","json","savedList","render","text","message","HabitsList","habitslist","componentDidMount","resp","body","updateItem","id","itemAttributes","index","length","list","find","console","log","newlist","slice","Object","assign","updatedList","JSON","stringify","addNewHabit","str","title","allTheThings","i","push","items","map","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\nclass Item extends React.Component {\n  constructor (props){\n    super ();\n\n    this.state = {\n      checked: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);    \n  }\n  handleClick (e){\n    this.setState({\n      checked: !this.state.checked\n    });\n\n\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n    .then(e => e.json())\n    .then(savedList => {\n      this.setState((state) => ({\n        checked: !this.state.checked\n      }));\n    })\n   \n\n\n  }\n\n  render (){\n    \n    let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n    return (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n            <hr />\n          </div>\n        </div>\n    );\n  }\n}\n\n\nexport default class HabitsList extends React.Component {\n\n  state = {\n          habitslist: [],\n  };\n\n    componentDidMount() {\n      fetch('/habitslist').then(resp => {\n         return resp.json();\n      }).then(body => {\n\n        this.setState({\n          habitslist: body\n        })\n      })\n    }\n\n \n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list)\n\n    const newlist = [\n      ...this.state.habitslist.slice(0, index),\n      Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n      ...this.state.habitslist.slice(index)\n   ]\n   \n    const updatedList = { ...this.state.habitslist, ...itemAttributes};\n    console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length]),\n    })\n    .then(e => e.json())\n    .then(savedList => {\n      this.setState((state) => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist)\n    })\n   \n\n      this.setState({\n        habitslist: [\n           ...this.state.habitslist.slice(0, index),\n           Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n           ...this.state.habitslist.slice(index)\n        ]\n      });\n  }\n\n  addNewHabit(str){\n    console.log(this.state.habitslist.length)\n    this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n  }\n\n\n  render (){\n    let allTheThings = [];\n    for (var i = 0; i < this.state.habitslist.length; i++) { \n        allTheThings.push(<Item message={this.state.habitslist[i].title} />);\n      }\n    let items = allTheThings.map(thing => thing);\n\n    return (\n\n      <div className='habits-list'> \n        <h2>Habits List</h2>\n        <h4>{items}</h4>\n        <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}