{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      checked: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n  render() {\n    let text = this.state.checked ? /*#__PURE__*/React.createElement(\"strike\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, this.props.message) : this.props.message;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), \"\\xA0\", text, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default class HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  // componentDidMount(){\n  //   fetch('/habitslist').then(resp => {\n  //     return resp.json();\n  //   }).then(body => {\n  //     console.log(body);\n  //     this.setState({\n  //       habitslist: body\n  //     })\n  //   })\n  // }\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      console.log(body);\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        message: this.state.habitslist[i].title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }\n      }));\n    } // let allTheThings = [<Item message={this.props.mes1} />, <Item message={this.props.mes2} />, \n    //   <Item message={this.state.mes1} />, <Item message={this.props.mes4} />]\n\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Applications/web/health-app/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","Component","constructor","props","state","checked","handleClick","bind","e","setState","render","text","message","HabitsList","habitslist","componentDidMount","fetch","then","resp","json","body","console","log","updateItem","id","itemAttributes","index","length","slice","Object","assign","addNewHabit","str","title","allTheThings","i","push","items","map","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\nclass Item extends React.Component {\n  constructor (props){\n    super ();\n\n    this.state = {\n      checked: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);    \n  }\n  handleClick (e){\n    this.setState({\n      checked: !this.state.checked\n    });\n\n  }\n  render (){\n    \n    let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n    return (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n            <hr />\n          </div>\n        </div>\n    );\n  }\n}\n\n\nexport default class HabitsList extends React.Component {\n\n  // constructor (props){\n  //   super ();\n  //   this.state = {\n  //     habitslist:[]\n  //     // habitslist: [\n  //     //     {\n  //     //       id: 1,\n  //     //       title: \"Drink more water\"\n  //     //     },\n  //     //     {\n  //     //       id: 2,\n  //     //       title: \"No coffee\"\n  //     //     },\n  //     //     {\n  //     //       id: 3,\n  //     //       title: \"Morning workout\"\n  //     //     },\n  //     //     {\n  //     //       id: 4,\n  //     //       title: \"More time outside\"\n  //     //     },\n  //     // ]\n      \n  //   };\n\n  // }\n\n  state = {\n          habitslist: [],\n  };\n\n\n  // componentDidMount(){\n  //   fetch('/habitslist').then(resp => {\n  //     return resp.json();\n  //   }).then(body => {\n  //     console.log(body);\n  //     this.setState({\n  //       habitslist: body\n  //     })\n  //   })\n     \n    // }\n    componentDidMount() {\n      fetch('/habitslist').then(resp => {\n        return resp.json();\n      }).then(body => {\n        console.log(body);\n        this.setState({\n          habitslist: body\n        })\n      })\n    }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n   \n      this.setState({\n        habitslist: [\n           ...this.state.habitslist.slice(0, index),\n           Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n           ...this.state.habitslist.slice(index)\n        ]\n      });\n  }\n\n  addNewHabit(str){\n    console.log(this.state.habitslist.length)\n    this.updateItem(this.state.habitslist.length, {title: str});\n\n  }\n\n\n\n  render (){\n    let allTheThings = [];\n    for (var i = 0; i < this.state.habitslist.length; i++) { \n        allTheThings.push(<Item message={this.state.habitslist[i].title} />);\n      }\n    // let allTheThings = [<Item message={this.props.mes1} />, <Item message={this.props.mes2} />, \n    //   <Item message={this.state.mes1} />, <Item message={this.props.mes4} />]\n    let items = allTheThings.map(thing => thing);\n\n    return (\n\n      <div className='habits-list'>\n        \n        <h2>Habits List</h2>\n        \n        <h4>{items}</h4>\n        {/* <TextField id=\"standard-secondary\" label=\"Enter new habit\" color=\"secondary\" />\n        <Button className='button1' variant=\"contained\" color=\"primary\">\n          Add habit\n        </Button> */}\n        <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n\n\n        \n\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}