{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js\";\nimport React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport './habits.css';\nimport AddHabit from '../addHabit'; // class Item extends React.Component {\n//     constructor (props){\n//         super ();\n//         this.state = {\n//             checked: false\n//         };\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick (e){\n//         this.setState({\n//             checked: !this.state.checked\n//         });\n//     }\n//     render (){\n//         let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n//         return (\n//             <div className=\"row\">\n//                 <div className=\"col-md-12\">\n//                     <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n//                     <hr />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nclass Item extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-list-item\",\n      onClick: () => isChecked(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, habit.checked ? /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"\\u2714\\uFE0F\") : /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"cross\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"\\u274C\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-list-item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, habit.title, \"!\"));\n  }\n\n}\n\nexport default class HabitsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habitslist: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/habitslist').then(resp => {\n      return resp.json();\n    }).then(body => {\n      this.setState({\n        habitslist: body\n      });\n    });\n  }\n\n  updateItem(id, itemAttributes) {\n    var index = this.state.habitslist.length;\n    const list = this.state.habitslist.find(list => list.id === id);\n    console.log(\"prev \", list);\n    const newlist = [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)];\n    const updatedList = { ...this.state.habitslist,\n      ...itemAttributes\n    };\n    console.log(\"new list\", newlist[this.state.habitslist.length]);\n    fetch('/habitslist', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newlist[this.state.habitslist.length])\n    }).then(e => e.json()).then(savedList => {\n      this.setState(state => ({\n        habitslist: newlist\n      }));\n      console.log(\"lefe\", newlist);\n    });\n    this.setState({\n      habitslist: [...this.state.habitslist.slice(0, index), Object.assign({}, this.state.habitslist[index + 2], itemAttributes), ...this.state.habitslist.slice(index)]\n    });\n  }\n\n  addNewHabit(str) {\n    console.log(this.state.habitslist.length);\n    this.updateItem(this.state.habitslist.length, {\n      id: this.state.habitslist.length + 1,\n      checked: false,\n      title: str\n    });\n  }\n\n  render() {\n    let allTheThings = [];\n\n    for (var i = 0; i < this.state.habitslist.length; i++) {\n      allTheThings.push( /*#__PURE__*/React.createElement(Item, {\n        message: this.state.habitslist[i].title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 31\n        }\n      }));\n    }\n\n    let items = allTheThings.map(thing => thing);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"habits-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Habits List\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, items), /*#__PURE__*/React.createElement(AddHabit, {\n      onAdd: e => this.addNewHabit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/web2/healthy-site/src/components/habits/habits.js"],"names":["React","Button","TextField","AddHabit","Item","Component","render","isChecked","habit","id","checked","title","HabitsList","state","habitslist","componentDidMount","fetch","then","resp","json","body","setState","updateItem","itemAttributes","index","length","list","find","console","log","newlist","slice","Object","assign","updatedList","method","headers","JSON","stringify","e","savedList","addNewHabit","str","allTheThings","i","push","items","map","thing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, TextField } from '@material-ui/core';\n\nimport './habits.css'\nimport AddHabit from '../addHabit';\n\n\n// class Item extends React.Component {\n//     constructor (props){\n//         super ();\n\n//         this.state = {\n//             checked: false\n//         };\n\n//         this.handleClick = this.handleClick.bind(this);\n//     }\n//     handleClick (e){\n//         this.setState({\n//             checked: !this.state.checked\n//         });\n\n//     }\n\n//     render (){\n\n//         let text = this.state.checked ? <strike>{this.props.message}</strike> : this.props.message;\n//         return (\n//             <div className=\"row\">\n//                 <div className=\"col-md-12\">\n//                     <input type=\"checkbox\" onClick={this.handleClick} />&nbsp;{text}\n//                     <hr />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\n\nclass Item extends React.Component{\nrender() {\n    return(\n        <div className='todo-list-item' onClick={() => isChecked(habit.id)}>\n      {habit.checked ? (\n        <span role='img' aria-label='check'>\n          ✔️\n        </span>\n      ) : (\n        <span role='img' aria-label='cross'>\n          ❌\n        </span>\n      )}\n      <span className='todo-list-item-text'>{habit.title}!</span>\n    </div>\n    )\n}\n}\n    \n\n\nexport default class HabitsList extends React.Component {\n\n    state = {\n        habitslist: [],\n    };\n\n    componentDidMount() {\n        fetch('/habitslist').then(resp => {\n            return resp.json();\n        }).then(body => {\n\n            this.setState({\n                habitslist: body\n            })\n        })\n    }\n\n\n    updateItem(id, itemAttributes) {\n        var index = this.state.habitslist.length;\n\n        const list = this.state.habitslist.find(list => list.id === id);\n        console.log(\"prev \", list)\n\n        const newlist = [\n            ...this.state.habitslist.slice(0, index),\n            Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n            ...this.state.habitslist.slice(index)\n        ]\n\n        const updatedList = { ...this.state.habitslist, ...itemAttributes};\n        console.log(\"new list\", newlist[this.state.habitslist.length])\n\n\n        fetch('/habitslist', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newlist[this.state.habitslist.length]),\n        })\n            .then(e => e.json())\n            .then(savedList => {\n                this.setState((state) => ({\n                    habitslist: newlist\n                }));\n                console.log(\"lefe\", newlist)\n            })\n\n\n        this.setState({\n            habitslist: [\n                ...this.state.habitslist.slice(0, index),\n                Object.assign({}, this.state.habitslist[index+2], itemAttributes),\n                ...this.state.habitslist.slice(index)\n            ]\n        });\n    }\n\n    addNewHabit(str){\n        console.log(this.state.habitslist.length)\n        this.updateItem(this.state.habitslist.length, {id:this.state.habitslist.length + 1, checked:false,  title: str});\n\n    }\n\n\n    render (){\n        let allTheThings = [];\n        for (var i = 0; i < this.state.habitslist.length; i++) {\n            allTheThings.push(<Item message={this.state.habitslist[i].title} />);\n        }\n        let items = allTheThings.map(thing => thing);\n\n        return (\n\n            <div className='habits-list'>\n                <h2>Habits List</h2>\n                <h4>{items}</h4>\n                <AddHabit  onAdd={(e) => this.addNewHabit(e)} ></AddHabit>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}