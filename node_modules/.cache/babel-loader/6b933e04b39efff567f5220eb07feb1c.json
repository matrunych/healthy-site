{"ast":null,"code":"var _jsxFileName = \"/Applications/web/health-app/src/components/check-box/check-box.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './check-box.css';\nimport { Progress } from 'semantic-ui-react'; // export default function Checkboxes() {\n//   const [checked, setChecked] = React.useState(true);\n//   const handleChange = (event) => {\n//     setChecked(event.target.checked);\n//   };\n//   return (\n//     <div>\n//         <h1>Water</h1>\n//       <Checkbox\n//         checked={checked}\n//         onChange={handleChange}\n//         inputProps={{ 'aria-label': 'primary checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         color=\"primary\"\n//         inputProps={{ 'aria-label': 'secondary checkbox' }}\n//       />\n//       <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'checkbox with small size' }}\n//       />\n//     </div>\n//   );\n// }\n// export const CheckBox = props => {\n//     return (\n//       <li>\n//        <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n//       </li>\n//     )\n// }\n// export default CheckBox\n// class Checkboxes extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         fruites: [\n//           {id: 1, value: \"banana\", isChecked: false},\n//           {id: 2, value: \"apple\", isChecked: false},\n//           {id: 3, value: \"mango\", isChecked: false},\n//           {id: 4, value: \"grap\", isChecked: false}\n//         ]\n//       }\n//     }\n//     handleAllChecked = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n//       this.setState({fruites: fruites})\n//     }\n//     handleCheckChieldElement = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => {\n//          if (fruite.value === event.target.value)\n//             fruite.isChecked =  event.target.checked\n//       })\n//       this.setState({fruites: fruites})\n//     }\n//     render() {\n//       return (\n//         <div className=\"App\">\n//         <h1> Check and Uncheck All Example </h1>\n//         <input type=\"checkbox\" onClick={this.handleAllChecked}  value=\"checkedall\" /> Check / Uncheck All\n//           <ul>\n//           {\n//             this.state.fruites.map((fruite) => {\n//               return (<CheckBox handleCheckChieldElement={this.handleCheckChieldElement}  {...fruite} />)\n//             })\n//           }\n//           </ul>\n//         </div>\n//       );\n//     }\n//   }\n//   // export default Checkboxes\n// // class HabitProgress extends React.Component {\n// //   constructor(props) {\n// //     super(props)\n// //     this.state = {\n// //       percentage: 0\n//     }\n//     this.nextStep = this.nextStep.bind(this)\n//   }\n//   nextStep() {\n//     if(this.percentage === 100) return \n//     else{\n//       this.percentage =this.percentage + 12.5   \n//       console.log(this.percentage)\n//     }\n//     console.log(\"ADD 12\");\n//   }\n//   render() {\n//     return (\n//       <div className = 'progress'>\n//         <h2>{this.props.title}</h2>\n//         <ProgressBar percentage={this.props.percentage} />\n//         <div style={{ marginTop: '20px' }}>  \n//           <button\n//             onClick={this.props.nextStep}\n//            >\n//             {this.props.increment}\n//           </button>  \n//           <button style={{width: '70px', height:'30px', marginTop: '10px',backgroundColor: 'rgba(231, 27, 27, 0.795)', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}> {this.props.reset}</button>\n//         </div>   \n//       </div>\n//     )\n//   }  \n// }\n// class ProgressBar extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return (\n//       <div className=\"progress-bar\">\n//         <Filler percentage={this.props.percentage} />\n//       </div>\n//     )\n//   }\n// }\n// // const ProgressBar = (props) => {\n// //   console.log(\"HUINYA\");\n// //   console.log(props.percentage);\n// //   return (\n// //       <div className=\"progress-bar\">\n// //         <Filler percentage={props.percentage} />\n// //       </div>\n// //     )\n// // }\n// // const Filler = (props) => {\n// //   return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n// // }\n// class Filler extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return <div className=\"filler\" style={{ width: `${this.props.percentage}%` }} />\n//   }\n// }\n// export default class HabitProgressList extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       habits: [\n//         {\n//           title: \"Water tracker\",\n//           percentage: 0,\n//           increment: \"+1 glass\",\n//           reset: \"Reset\"\n//         },\n//         {\n//           title: \"Else \",\n//           percentage: 25,\n//           increment: \"+\",\n//           reset: \"Reset\"\n//         },\n//       ]\n//     }\n//       }\n//       render(){\n//         return(\n//           <div>\n//             {this.state.habits.map((habit) => (\n//               console.log(habit.title),\n//           <HabitProgress title={habit.title} percentage={habit.percentage} increment={habit.increment} reset={habit.reset}  toggleIsDone={(id) => this.toggleIsDone(id)} />\n//         ))}\n//           </div>\n//         )\n//       }\n// }\n// const testData = [\n//   { bgcolor: \"#6a1b9a\", completed: 60 },\n//   { bgcolor: \"#00695c\", completed: 30 },\n//   { bgcolor: \"#ef6c00\", completed: 53 },\n// ];\n// const Checkboxes = (props) => {\n//   const { bgcolor, completed } = props;\n//   this.nextStep = this.nextStep.bind(this)\n//   const containerStyles = {\n//     height: 20,\n//     width: '100%',\n//     backgroundColor: \"#e0e0de\",\n//     borderRadius: 50,\n//     margin: 50\n//   }\n//   const fillerStyles = {\n//     height: '100%',\n//     width: `${completed}%`,\n//     backgroundColor: bgcolor,\n//     borderRadius: 'inherit',\n//     textAlign: 'right'\n//   }\n//   const labelStyles = {\n//     padding: 5,\n//     color: 'white',\n//     fontWeight: 'bold'\n//   }\n//   return (\n//     <div style={containerStyles}>\n//       <div style={fillerStyles}>\n//         <span style={labelStyles}>{`${completed}%`}</span>\n//       </div>\n//     </div>\n//   );\n// };\n\nclass Checkboxes extends React.Component {\n  constructor(props) {\n    super(props); //   this.state = {[\n    //     { bgcolor: \"#6a1b9a\", completed: 60 },\n    //     { bgcolor: \"#00695c\", completed: 30 },\n    //     { bgcolor: \"#ef6c00\", completed: 53 }\n    //   ];\n    // };\n\n    const containerStyles = {\n      height: 20,\n      width: '100%',\n      backgroundColor: \"#e0e0de\",\n      borderRadius: 50,\n      margin: 50\n    };\n    const fillerStyles = {\n      height: '100%',\n      width: `${completed}%`,\n      backgroundColor: bgcolor,\n      borderRadius: 'inherit',\n      textAlign: 'right'\n    };\n    const labelStyles = {\n      padding: 5,\n      color: 'white',\n      fontWeight: 'bold'\n    }; // this.nextStep = this.nextStep.bind(this)\n  } // nextStep() {\n  //   if(this.state.completed === 100) return \n  //   this.setState(prevState => ({ percentage: prevState.completed + 12.5 }))\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: containerStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: fillerStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, `${this.props.completed}%`)));\n  }\n\n}\n\nexport default class ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        bgcolor: \"#6a1b9a\",\n        completed: 60\n      }, {\n        bgcolor: \"#00695c\",\n        completed: 30\n      }, {\n        bgcolor: \"#ef6c00\",\n        completed: 53\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }\n    }, this.state.map((item, idx) => /*#__PURE__*/React.createElement(Checkboxes, {\n      key: idx,\n      bgcolor: item.bgcolor,\n      completed: item.completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Applications/web/health-app/src/components/check-box/check-box.js"],"names":["React","Checkbox","Progress","Checkboxes","Component","constructor","props","containerStyles","height","width","backgroundColor","borderRadius","margin","fillerStyles","completed","bgcolor","textAlign","labelStyles","padding","color","fontWeight","render","ProgressBar","state","items","map","item","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGnB;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,MAAM,EAAE,EADc;AAEtBC,MAAAA,KAAK,EAAE,MAFe;AAGtBC,MAAAA,eAAe,EAAE,SAHK;AAItBC,MAAAA,YAAY,EAAE,EAJQ;AAKtBC,MAAAA,MAAM,EAAE;AALc,KAAxB;AASA,UAAMC,YAAY,GAAG;AACnBL,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,KAAK,EAAG,GAAEK,SAAU,GAFD;AAGnBJ,MAAAA,eAAe,EAAEK,OAHE;AAInBJ,MAAAA,YAAY,EAAE,SAJK;AAKnBK,MAAAA,SAAS,EAAE;AALQ,KAArB;AAQA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,OAAO,EAAE,CADS;AAElBC,MAAAA,KAAK,EAAE,OAFW;AAGlBC,MAAAA,UAAU,EAAE;AAHM,KAApB,CA1BmB,CAgCjB;AACD,GAlCqC,CAmCtC;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAEd,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAEM,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAEI,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,GAAE,KAAKX,KAAL,CAAWQ,SAAU,GAAnD,CADF,CADF,CADF;AAOD;;AAhDqC;;AAsDxC,eAAe,MAAMQ,WAAN,SAA0BtB,KAAK,CAACI,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACI,SAAKiB,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACX;AAAET,QAAAA,OAAO,EAAE,SAAX;AAAsBD,QAAAA,SAAS,EAAE;AAAjC,OADW,EAEX;AAAEC,QAAAA,OAAO,EAAE,SAAX;AAAsBD,QAAAA,SAAS,EAAE;AAAjC,OAFW,EAGX;AAAEC,QAAAA,OAAO,EAAE,SAAX;AAAsBD,QAAAA,SAAS,EAAE;AAAjC,OAHW;AADI,KAAb;AAOL;;AACDO,EAAAA,MAAM,GACN;AACI,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKE,KAAL,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,kBACd,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,GAAjB;AAAsB,MAAA,OAAO,EAAED,IAAI,CAACX,OAApC;AAA6C,MAAA,SAAS,EAAEW,IAAI,CAACZ,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CADF;AAOH;;AApBsD","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './check-box.css'\nimport { Progress } from 'semantic-ui-react';\n\n// export default function Checkboxes() {\n//   const [checked, setChecked] = React.useState(true);\n\n//   const handleChange = (event) => {\n//     setChecked(event.target.checked);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Water</h1>\n//       <Checkbox\n//         checked={checked}\n//         onChange={handleChange}\n//         inputProps={{ 'aria-label': 'primary checkbox' }}\n//       />\n//       <Checkbox\n//         defaultChecked\n//         color=\"primary\"\n//         inputProps={{ 'aria-label': 'secondary checkbox' }}\n//       />\n//       <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n//       <Checkbox\n//         defaultChecked\n  \n//         inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n//       />\n     \n//       <Checkbox\n//         defaultChecked\n//         inputProps={{ 'aria-label': 'checkbox with small size' }}\n//       />\n//     </div>\n//   );\n// }\n\n// export const CheckBox = props => {\n//     return (\n//       <li>\n//        <input key={props.id} onClick={props.handleCheckChieldElement} type=\"checkbox\" checked={props.isChecked} value={props.value} /> {props.value}\n//       </li>\n//     )\n// }\n\n// export default CheckBox\n\n\n// class Checkboxes extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         fruites: [\n//           {id: 1, value: \"banana\", isChecked: false},\n//           {id: 2, value: \"apple\", isChecked: false},\n//           {id: 3, value: \"mango\", isChecked: false},\n//           {id: 4, value: \"grap\", isChecked: false}\n//         ]\n//       }\n//     }\n    \n//     handleAllChecked = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => fruite.isChecked = event.target.checked) \n//       this.setState({fruites: fruites})\n//     }\n  \n//     handleCheckChieldElement = (event) => {\n//       let fruites = this.state.fruites\n//       fruites.forEach(fruite => {\n//          if (fruite.value === event.target.value)\n//             fruite.isChecked =  event.target.checked\n//       })\n//       this.setState({fruites: fruites})\n//     }\n  \n//     render() {\n//       return (\n//         <div className=\"App\">\n//         <h1> Check and Uncheck All Example </h1>\n//         <input type=\"checkbox\" onClick={this.handleAllChecked}  value=\"checkedall\" /> Check / Uncheck All\n//           <ul>\n//           {\n//             this.state.fruites.map((fruite) => {\n//               return (<CheckBox handleCheckChieldElement={this.handleCheckChieldElement}  {...fruite} />)\n//             })\n//           }\n//           </ul>\n//         </div>\n//       );\n//     }\n//   }\n  \n//   // export default Checkboxes\n\n\n// // class HabitProgress extends React.Component {\n// //   constructor(props) {\n// //     super(props)\n    \n// //     this.state = {\n// //       percentage: 0\n//     }\n//     this.nextStep = this.nextStep.bind(this)\n//   }\n//   nextStep() {\n//     if(this.percentage === 100) return \n//     else{\n//       this.percentage =this.percentage + 12.5   \n//       console.log(this.percentage)\n\n//     }\n//     console.log(\"ADD 12\");\n\n//   }\n  \n//   render() {\n//     return (\n//       <div className = 'progress'>\n        \n//         <h2>{this.props.title}</h2>\n        \n//         <ProgressBar percentage={this.props.percentage} />\n        \n//         <div style={{ marginTop: '20px' }}>  \n        \n//           <button\n//             onClick={this.props.nextStep}\n//            >\n//             {this.props.increment}\n//           </button>  \n\n//           <button style={{width: '70px', height:'30px', marginTop: '10px',backgroundColor: 'rgba(231, 27, 27, 0.795)', marginBottom: '15px'}} onClick={() => this.setState({ percentage: 0 })}> {this.props.reset}</button>\n          \n//         </div>   \n        \n//       </div>\n//     )\n//   }  \n// }\n\n\n// class ProgressBar extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return (\n    \n//       <div className=\"progress-bar\">\n//         <Filler percentage={this.props.percentage} />\n//       </div>\n//     )\n//   }\n// }\n// // const ProgressBar = (props) => {\n// //   console.log(\"HUINYA\");\n// //   console.log(props.percentage);\n\n// //   return (\n    \n// //       <div className=\"progress-bar\">\n// //         <Filler percentage={props.percentage} />\n// //       </div>\n// //     )\n// // }\n\n// // const Filler = (props) => {\n// //   return <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n// // }\n\n// class Filler extends React.Component{\n//   constructor(props) {\n//     super(props)\n//   }\n//   render(){\n//     return <div className=\"filler\" style={{ width: `${this.props.percentage}%` }} />\n\n//   }\n// }\n\n\n// export default class HabitProgressList extends React.Component {\n//   constructor(props) {\n//     super(props)\n    \n//     this.state = {\n//       habits: [\n//         {\n//           title: \"Water tracker\",\n//           percentage: 0,\n//           increment: \"+1 glass\",\n//           reset: \"Reset\"\n//         },\n//         {\n//           title: \"Else \",\n//           percentage: 25,\n//           increment: \"+\",\n//           reset: \"Reset\"\n//         },\n//       ]\n     \n//     }\n//       }\n\n//       render(){\n//         return(\n\n//           <div>\n            \n//             {this.state.habits.map((habit) => (\n//               console.log(habit.title),\n//           <HabitProgress title={habit.title} percentage={habit.percentage} increment={habit.increment} reset={habit.reset}  toggleIsDone={(id) => this.toggleIsDone(id)} />\n//         ))}\n//           </div>\n//         )\n//       }\n// }\n\n\n\n// const testData = [\n//   { bgcolor: \"#6a1b9a\", completed: 60 },\n//   { bgcolor: \"#00695c\", completed: 30 },\n//   { bgcolor: \"#ef6c00\", completed: 53 },\n// ];\n\n\n\n// const Checkboxes = (props) => {\n//   const { bgcolor, completed } = props;\n//   this.nextStep = this.nextStep.bind(this)\n\n//   const containerStyles = {\n//     height: 20,\n//     width: '100%',\n//     backgroundColor: \"#e0e0de\",\n//     borderRadius: 50,\n//     margin: 50\n//   }\n\n\n//   const fillerStyles = {\n//     height: '100%',\n//     width: `${completed}%`,\n//     backgroundColor: bgcolor,\n//     borderRadius: 'inherit',\n//     textAlign: 'right'\n//   }\n\n//   const labelStyles = {\n//     padding: 5,\n//     color: 'white',\n//     fontWeight: 'bold'\n//   }\n\n  \n\n//   return (\n//     <div style={containerStyles}>\n//       <div style={fillerStyles}>\n//         <span style={labelStyles}>{`${completed}%`}</span>\n//       </div>\n//     </div>\n//   );\n// };\n\n\nclass Checkboxes extends React.Component{\n  constructor(props) {\n    super(props)\n    \n  //   this.state = {[\n  //     { bgcolor: \"#6a1b9a\", completed: 60 },\n  //     { bgcolor: \"#00695c\", completed: 30 },\n  //     { bgcolor: \"#ef6c00\", completed: 53 }\n  //   ];\n  // };\n  const containerStyles = {\n    height: 20,\n    width: '100%',\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 50,\n    margin: 50\n  }\n\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n\n    // this.nextStep = this.nextStep.bind(this)\n  }\n  // nextStep() {\n  //   if(this.state.completed === 100) return \n  //   this.setState(prevState => ({ percentage: prevState.completed + 12.5 }))\n  // }\n\n  render() {\n    return (\n      <div style={containerStyles}>\n        <div style={fillerStyles}>\n          <span style={labelStyles}>{`${this.props.completed}%`}</span>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\n\nexport default class ProgressBar extends React.Component {\n  constructor(props) {\n    super(props)\n        this.state = {\n          items: [\n      { bgcolor: \"#6a1b9a\", completed: 60 },\n      { bgcolor: \"#00695c\", completed: 30 },\n      { bgcolor: \"#ef6c00\", completed: 53 }\n    ]\n  };\n  }\n  render()\n  {\n      return(\n        <div >\n        {this.state.map((item, idx) => (\n          <Checkboxes key={idx} bgcolor={item.bgcolor} completed={item.completed} />\n        ))}\n      </div>\n      )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}